by = c("ID_2" = "ID_2")) %>%
rename("name_orig" = "NAME_2") %>%
# Get names for destination districts
left_join(a2@data %>% select("ID_2", "NAME_2"),
by = c("ID_2_lag" = "ID_2")) %>%
select(-ID_2) %>%
rename("name_dest" = "NAME_2") %>%
# Create label column
mutate(label = paste("From",
name_orig,
"to",
name_dest,
":",
count)) %>% #subset(name_orig == "Harare") %>% #View()
# Reshape wide
pivot_wider(id_cols = c("ID_2_lag", "name_dest"),
names_from = "name_orig",
values_from = c("count", "label"))
# Merge with polygons
map_polygons <- a2 %>% merge(mm_wide, by.x = "ID_2", by.y = "ID_2_lag")
# EXPORT =======================================================================
map_polygons$count <- 1
map_polygons$label <- "test"
saveRDS(map_polygons, file.path(GITHUB, "Dasboard", "data", "map_polygons.Rds"))
saveRDS(mm_wide, file.path(GITHUB, "Dasboard", "data", "mm_wide.Rds"))
names(map_polygons)
runApp('Documents/Github/zimbabwe2020/Dasboard/app_pass.R')
runApp('Documents/Github/zimbabwe2020/Dasboard/app_pass.R')
runApp('Documents/Github/zimbabwe2020/Dasboard/app_pass.R')
runApp('Documents/Github/zimbabwe2020/Dasboard/app_pass.R')
runApp('Documents/Github/zimbabwe2020/Dasboard/app_pass.R')
runApp('Documents/Github/zimbabwe2020/Dasboard/app_pass.R')
runApp('Documents/Github/zimbabwe2020/Dasboard/app_pass.R')
runApp('Documents/Github/zimbabwe2020/Dasboard')
shiny::runApp('Documents/Github/zimbabwe2020/Dasboard')
runApp('Documents/Github/zimbabwe2020/Dasboard')
# Crashmap
# Setup ------------------------------------------------------------------------
library(leaflet)
library(leaflet.extras)
library(shinydashboard)
library(RColorBrewer)
library(shinythemes)
library(DT)
library(dplyr)
library(rmarkdown)
library(lubridate)
library(shiny)
library(googlesheets)
library(ggplot2)
library(tidyr)
library(zoo)
library(bcrypt)
library(shinyjs)
library(ngram)
library(rtweet)
library(stringdist)
library(stringr)
options(warn=0)
# LOAD/PREP DATA ===============================================================
if(Sys.info()[["user"]] == "robmarty") setwd("~/Documents/Github/zimbabwe2020/Dasboard")
if(Sys.info()[["user"]] == "WB521633") setwd("C:/Users/wb521633/OneDrive - WBG/Documents/Github/zimbabwe2020/Dasboard")
#### Districts
map_polygons <- readRDS("data/map_polygons.Rds")
#### Wards
mm_ward <- readRDS(file.path("data/mm_ward_harare.Rds"))
mm_ward$ward_name_dest_num <- mm_ward$ward_name_dest %>%
as.factor() %>%
as.numeric()
mm_ward$label <- paste0("From ", mm_ward$ward_name_orig, " to ", mm_ward$ward_name_dest, ": ", mm_ward$count)
mm_ward$label[mm_ward$ward_name_orig == mm_ward$ward_name_dest] <- "Origin"
a3 <- readRDS(file.path("data/a3.Rds"))
a3
mm_ward_map <- merge(a3,
mm_ward[(mm_ward$ward_name_orig %in% "Chitungwiza - Ward 1") & (mm_ward$day %in% "2019-02-01"),],
by.x="ADM3_PCODE",
by.y="ADM3_PCODE_lag")
mm_ward_map
runApp()
# Crashmap
# Setup ------------------------------------------------------------------------
library(leaflet)
library(leaflet.extras)
library(shinydashboard)
library(RColorBrewer)
library(shinythemes)
library(DT)
library(dplyr)
library(rmarkdown)
library(lubridate)
library(shiny)
library(googlesheets)
library(ggplot2)
library(tidyr)
library(zoo)
library(bcrypt)
library(shinyjs)
library(ngram)
library(rtweet)
library(stringdist)
library(stringr)
library(raster)
options(warn=0)
# LOAD/PREP DATA ===============================================================
if(Sys.info()[["user"]] == "robmarty") setwd("~/Documents/Github/zimbabwe2020/Dasboard")
if(Sys.info()[["user"]] == "WB521633") setwd("C:/Users/wb521633/OneDrive - WBG/Documents/Github/zimbabwe2020/Dasboard")
#### Districts
map_polygons <- readRDS("data/map_polygons.Rds")
#### Wards
mm_ward <- readRDS(file.path("data/mm_ward_harare.Rds"))
mm_ward$ward_name_dest_num <- mm_ward$ward_name_dest %>%
as.factor() %>%
as.numeric()
mm_ward$label <- paste0("From ", mm_ward$ward_name_orig, " to ", mm_ward$ward_name_dest, ": ", mm_ward$count)
mm_ward$label[mm_ward$ward_name_orig == mm_ward$ward_name_dest] <- "Origin"
a3 <- readRDS(file.path("data/a3.Rds"))
mm_ward_map <- merge(a3,
mm_ward[(mm_ward$ward_name_orig %in% "Chitungwiza - Ward 1") & (mm_ward$day %in% "2019-02-01"),],
by.x="ADM3_PCODE",
by.y="ADM3_PCODE_lag")
head(a3)
a3
shiny::runApp()
shiny::runApp()
# Clean Data from QR Codes
library(googlesheets4)
library(forcats)
PRETEND_DATA <- FALSE
# Load and Append Data ---------------------------------------------------------
# Matatu characteristics. Liscence plate, psv sticker number, route, etc.
matatu_details <- read_sheet("https://docs.google.com/spreadsheets/d/1IrOZ--nsNDYMiipUOeQjdiGY8oyF4MXaU39hXRA-444")
# Clean Data from QR Codes
library(googlesheets4)
library(forcats)
PRETEND_DATA <- FALSE
# Load and Append Data ---------------------------------------------------------
# Matatu characteristics. Liscence plate, psv sticker number, route, etc.
matatu_details <- read_sheet("https://docs.google.com/spreadsheets/d/1IrOZ--nsNDYMiipUOeQjdiGY8oyF4MXaU39hXRA-444")
if(PRETEND_DATA){
# General data
feedback_df <- bind_rows(
read_sheet("https://docs.google.com/spreadsheets/d/1SIaFHrrUOXqsVtqzApN-u5wqd_7eOE7ZzswRf7mcH_s") %>%
mutate(licence_plate = "KCL 287P"),
read_sheet("https://docs.google.com/spreadsheets/d/1SIaFHrrUOXqsVtqzApN-u5wqd_7eOE7ZzswRf7mcH_s") %>%
mutate(licence_plate = "KCN 592S"),
read_sheet("https://docs.google.com/spreadsheets/d/1SIaFHrrUOXqsVtqzApN-u5wqd_7eOE7ZzswRf7mcH_s") %>%
mutate(licence_plate = "KCX 025N"),
read_sheet("https://docs.google.com/spreadsheets/d/1SIaFHrrUOXqsVtqzApN-u5wqd_7eOE7ZzswRf7mcH_s") %>%
mutate(licence_plate = "KCX 025N"),
read_sheet("https://docs.google.com/spreadsheets/d/1SIaFHrrUOXqsVtqzApN-u5wqd_7eOE7ZzswRf7mcH_s") %>%
mutate(licence_plate = "KCX 259D"),
read_sheet("https://docs.google.com/spreadsheets/d/1SIaFHrrUOXqsVtqzApN-u5wqd_7eOE7ZzswRf7mcH_s") %>%
mutate(licence_plate = "KCP 863M")) %>%
mutate(source = "qr_code")
} else{
# Data
feedback_df <- bind_rows(
read_sheet("https://docs.google.com/spreadsheets/d/1zdT9UQGBfw4GO0sgh_tmX7ODj7IfPBPDDM15ytxtM3k/edit#gid=225571172") %>%
mutate(licence_plate = "KCL 287P"),
read_sheet("https://docs.google.com/spreadsheets/d/1s4ogLRQmex-EDokR08lkGMmG8U8ZaydD3uZzH1m3-i4/edit#gid=54770904") %>%
mutate(licence_plate = "KCN 592S"),
read_sheet("https://docs.google.com/spreadsheets/d/1s9NlSZALlXZgDoX6tny0YQWlj5PEeKNWy47WfWMIjq8/edit#gid=1991415175") %>%
mutate(licence_plate = "KCX 025N"),
read_sheet("https://docs.google.com/spreadsheets/d/1etKUdclDKurADv58lkNyXAwTsTgv2aJGLKPC4-HE4Q8/edit#gid=990515000") %>%
mutate(licence_plate = "KCX 259D"),
read_sheet("https://docs.google.com/spreadsheets/d/1_OZk-CNTtv5s4KIglNw7-aVzs5KpCsAPem1x1ahdmZE/edit#gid=575564100") %>%
mutate(licence_plate = "KCP 863M")
) %>%
mutate(source = "qr_code")
}
feedback_df <- merge(feedback_df, matatu_details, by = "licence_plate")
# Clean variables --------------------------------------------------------------
#### Add attribute of original variable name
for(var in names(feedback_df)){
attr(feedback_df[[var]], "name_full") <- var
}
#### Rename
feedback_df <- feedback_df %>%
dplyr::rename("driver_safety_rating" = "How would you rate your Matatu driver?",
"driver_speed" = "How would you describe your Matatu driver's speed?",
"passenger_amount" = "On the Matatu, are there",
"covid19_measures" = "Were measures taken to prevent the spread of COVID-19? (e.g, limiting passengers or providing sanitary wipes?)",
"amenity_importance" = "How important is it for a Matatu to have amenities like Music and WIFI?",
"comments" = "Leave any comments about the matatu or ride. Report unsafe driving or compliment the driver.")
#### Factor variables
feedback_df$driver_safety_rating <- feedback_df$driver_safety_rating %>%
factor(levels = c("Very safe",
"Safe",
"Unsafe",
"Very unsafe")) %>%
fct_rev() # reverse order for plotting later
feedback_df$driver_speed[feedback_df$driver_speed %in% "Too slow (could have gone faster)"] <- "Too slow"
feedback_df$driver_speed <- feedback_df$driver_speed %>%
factor(levels = c("Too slow",
"Okay",
"Fast",
"Dangerously Fast")) %>%
fct_rev() # reverse order for plotting later
feedback_df$passenger_amount <- feedback_df$passenger_amount %>%
factor(levels = c("Less people than seats",
"Same number of people as seats",
"More people than seats",
"More people than can fit")) %>%
fct_rev() # reverse order for plotting later
feedback_df$covid19_measures <- feedback_df$covid19_measures %>%
factor(levels = c("Yes, effective",
"Yes, but seemed limited",
"No")) %>%
fct_rev() # reverse order for plotting later
# Create additional variables --------------------------------------------------
feedback_df$route <- paste0(feedback_df$location_1, " <--> ",
feedback_df$location_2)
feedback_df$route_place_label <- paste0(feedback_df$route, "\n",
feedback_df$licence_plate)
# Export -----------------------------------------------------------------------
saveRDS(feedback_df, "/Users/robmarty/Documents/Github/psv-feedback-dashboard/qr_code_data.Rds")
library(googlesheets4)
library(forcats)
PRETEND_DATA <- FALSE
# Load and Append Data ---------------------------------------------------------
# Matatu characteristics. Liscence plate, psv sticker number, route, etc.
matatu_details <- read_sheet("https://docs.google.com/spreadsheets/d/1IrOZ--nsNDYMiipUOeQjdiGY8oyF4MXaU39hXRA-444")
# Data
feedback_df <- bind_rows(
read_sheet("https://docs.google.com/spreadsheets/d/1zdT9UQGBfw4GO0sgh_tmX7ODj7IfPBPDDM15ytxtM3k/edit#gid=225571172") %>%
mutate(licence_plate = "KCL 287P"),
read_sheet("https://docs.google.com/spreadsheets/d/1s4ogLRQmex-EDokR08lkGMmG8U8ZaydD3uZzH1m3-i4/edit#gid=54770904") %>%
mutate(licence_plate = "KCN 592S"),
read_sheet("https://docs.google.com/spreadsheets/d/1s9NlSZALlXZgDoX6tny0YQWlj5PEeKNWy47WfWMIjq8/edit#gid=1991415175") %>%
mutate(licence_plate = "KCX 025N"),
read_sheet("https://docs.google.com/spreadsheets/d/1etKUdclDKurADv58lkNyXAwTsTgv2aJGLKPC4-HE4Q8/edit#gid=990515000") %>%
mutate(licence_plate = "KCX 259D"),
read_sheet("https://docs.google.com/spreadsheets/d/1_OZk-CNTtv5s4KIglNw7-aVzs5KpCsAPem1x1ahdmZE/edit#gid=575564100") %>%
mutate(licence_plate = "KCP 863M")
) %>%
mutate(source = "qr_code")
# Clean Data from QR Codes
library(googlesheets4)
library(forcats)
library(dplyr)
PRETEND_DATA <- FALSE
# Load and Append Data ---------------------------------------------------------
# Matatu characteristics. Liscence plate, psv sticker number, route, etc.
matatu_details <- read_sheet("https://docs.google.com/spreadsheets/d/1IrOZ--nsNDYMiipUOeQjdiGY8oyF4MXaU39hXRA-444")
if(PRETEND_DATA){
# General data
feedback_df <- bind_rows(
read_sheet("https://docs.google.com/spreadsheets/d/1SIaFHrrUOXqsVtqzApN-u5wqd_7eOE7ZzswRf7mcH_s") %>%
mutate(licence_plate = "KCL 287P"),
read_sheet("https://docs.google.com/spreadsheets/d/1SIaFHrrUOXqsVtqzApN-u5wqd_7eOE7ZzswRf7mcH_s") %>%
mutate(licence_plate = "KCN 592S"),
read_sheet("https://docs.google.com/spreadsheets/d/1SIaFHrrUOXqsVtqzApN-u5wqd_7eOE7ZzswRf7mcH_s") %>%
mutate(licence_plate = "KCX 025N"),
read_sheet("https://docs.google.com/spreadsheets/d/1SIaFHrrUOXqsVtqzApN-u5wqd_7eOE7ZzswRf7mcH_s") %>%
mutate(licence_plate = "KCX 025N"),
read_sheet("https://docs.google.com/spreadsheets/d/1SIaFHrrUOXqsVtqzApN-u5wqd_7eOE7ZzswRf7mcH_s") %>%
mutate(licence_plate = "KCX 259D"),
read_sheet("https://docs.google.com/spreadsheets/d/1SIaFHrrUOXqsVtqzApN-u5wqd_7eOE7ZzswRf7mcH_s") %>%
mutate(licence_plate = "KCP 863M")) %>%
mutate(source = "qr_code")
} else{
# Data
feedback_df <- bind_rows(
read_sheet("https://docs.google.com/spreadsheets/d/1zdT9UQGBfw4GO0sgh_tmX7ODj7IfPBPDDM15ytxtM3k/edit#gid=225571172") %>%
mutate(licence_plate = "KCL 287P"),
read_sheet("https://docs.google.com/spreadsheets/d/1s4ogLRQmex-EDokR08lkGMmG8U8ZaydD3uZzH1m3-i4/edit#gid=54770904") %>%
mutate(licence_plate = "KCN 592S"),
read_sheet("https://docs.google.com/spreadsheets/d/1s9NlSZALlXZgDoX6tny0YQWlj5PEeKNWy47WfWMIjq8/edit#gid=1991415175") %>%
mutate(licence_plate = "KCX 025N"),
read_sheet("https://docs.google.com/spreadsheets/d/1etKUdclDKurADv58lkNyXAwTsTgv2aJGLKPC4-HE4Q8/edit#gid=990515000") %>%
mutate(licence_plate = "KCX 259D"),
read_sheet("https://docs.google.com/spreadsheets/d/1_OZk-CNTtv5s4KIglNw7-aVzs5KpCsAPem1x1ahdmZE/edit#gid=575564100") %>%
mutate(licence_plate = "KCP 863M")
) %>%
mutate(source = "qr_code")
}
feedback_df <- merge(feedback_df, matatu_details, by = "licence_plate")
# Clean variables --------------------------------------------------------------
#### Add attribute of original variable name
for(var in names(feedback_df)){
attr(feedback_df[[var]], "name_full") <- var
}
#### Rename
feedback_df <- feedback_df %>%
dplyr::rename("driver_safety_rating" = "How would you rate your Matatu driver?",
"driver_speed" = "How would you describe your Matatu driver's speed?",
"passenger_amount" = "On the Matatu, are there",
"covid19_measures" = "Were measures taken to prevent the spread of COVID-19? (e.g, limiting passengers or providing sanitary wipes?)",
"amenity_importance" = "How important is it for a Matatu to have amenities like Music and WIFI?",
"comments" = "Leave any comments about the matatu or ride. Report unsafe driving or compliment the driver.")
#### Factor variables
feedback_df$driver_safety_rating <- feedback_df$driver_safety_rating %>%
factor(levels = c("Very safe",
"Safe",
"Unsafe",
"Very unsafe")) %>%
fct_rev() # reverse order for plotting later
feedback_df$driver_speed[feedback_df$driver_speed %in% "Too slow (could have gone faster)"] <- "Too slow"
feedback_df$driver_speed <- feedback_df$driver_speed %>%
factor(levels = c("Too slow",
"Okay",
"Fast",
"Dangerously Fast")) %>%
fct_rev() # reverse order for plotting later
feedback_df$passenger_amount <- feedback_df$passenger_amount %>%
factor(levels = c("Less people than seats",
"Same number of people as seats",
"More people than seats",
"More people than can fit")) %>%
fct_rev() # reverse order for plotting later
feedback_df$covid19_measures <- feedback_df$covid19_measures %>%
factor(levels = c("Yes, effective",
"Yes, but seemed limited",
"No")) %>%
fct_rev() # reverse order for plotting later
# Create additional variables --------------------------------------------------
feedback_df$route <- paste0(feedback_df$location_1, " <--> ",
feedback_df$location_2)
feedback_df$route_place_label <- paste0(feedback_df$route, "\n",
feedback_df$licence_plate)
# Export -----------------------------------------------------------------------
saveRDS(feedback_df, "/Users/robmarty/Documents/Github/psv-feedback-dashboard/qr_code_data.Rds")
head(feedback_df)
shiny::runApp('Documents/Github/psv-feedback-dashboard')
licence_plate <- c("KCL 287P",
"KCN 592S",
"KCX 025N",
"KCX 259D",
"KCP 863M")
licence_plate
licence_plate %>% as.data.frame()
licence_plate %>% as.data.frame() %>%
dplyr::rename("licence_plate" = ".")
licence_plate <- c("KCL 287P",
"KCN 592S",
"KCX 025N",
"KCX 259D",
"KCP 863M") %>%
as.data.frame() %>%
dplyr::rename("licence_plate" = ".")
licence_plate
licence_plate <- c("KCL 287P",
"KCN 592S",
"KCX 025N",
"KCX 259D",
"KCP 863M") %>%
as.data.frame() %>%
dplyr::rename("licence_plate" = ".")
licence_plate
licence_plate <- c("KCL 287P",
"KCN 592S",
"KCX 025N",
"KCX 259D",
"KCP 863M") %>%
as.data.frame() %>%
dplyr::rename("licence_plate" = ".")
feedback_df <- bind_rows(feedback_df, licence_plate)
feedback_df
# Clean Data from QR Codes
library(googlesheets4)
library(forcats)
library(dplyr)
PRETEND_DATA <- FALSE
# Load and Append Data ---------------------------------------------------------
# Matatu characteristics. Liscence plate, psv sticker number, route, etc.
matatu_details <- read_sheet("https://docs.google.com/spreadsheets/d/1IrOZ--nsNDYMiipUOeQjdiGY8oyF4MXaU39hXRA-444")
if(PRETEND_DATA){
# General data
feedback_df <- bind_rows(
read_sheet("https://docs.google.com/spreadsheets/d/1SIaFHrrUOXqsVtqzApN-u5wqd_7eOE7ZzswRf7mcH_s") %>%
mutate(licence_plate = "KCL 287P"),
read_sheet("https://docs.google.com/spreadsheets/d/1SIaFHrrUOXqsVtqzApN-u5wqd_7eOE7ZzswRf7mcH_s") %>%
mutate(licence_plate = "KCN 592S"),
read_sheet("https://docs.google.com/spreadsheets/d/1SIaFHrrUOXqsVtqzApN-u5wqd_7eOE7ZzswRf7mcH_s") %>%
mutate(licence_plate = "KCX 025N"),
read_sheet("https://docs.google.com/spreadsheets/d/1SIaFHrrUOXqsVtqzApN-u5wqd_7eOE7ZzswRf7mcH_s") %>%
mutate(licence_plate = "KCX 025N"),
read_sheet("https://docs.google.com/spreadsheets/d/1SIaFHrrUOXqsVtqzApN-u5wqd_7eOE7ZzswRf7mcH_s") %>%
mutate(licence_plate = "KCX 259D"),
read_sheet("https://docs.google.com/spreadsheets/d/1SIaFHrrUOXqsVtqzApN-u5wqd_7eOE7ZzswRf7mcH_s") %>%
mutate(licence_plate = "KCP 863M")) %>%
mutate(source = "qr_code")
} else{
# Data
feedback_df <- bind_rows(
read_sheet("https://docs.google.com/spreadsheets/d/1zdT9UQGBfw4GO0sgh_tmX7ODj7IfPBPDDM15ytxtM3k/edit#gid=225571172") %>%
mutate(licence_plate = "KCL 287P"),
read_sheet("https://docs.google.com/spreadsheets/d/1s4ogLRQmex-EDokR08lkGMmG8U8ZaydD3uZzH1m3-i4/edit#gid=54770904") %>%
mutate(licence_plate = "KCN 592S"),
read_sheet("https://docs.google.com/spreadsheets/d/1s9NlSZALlXZgDoX6tny0YQWlj5PEeKNWy47WfWMIjq8/edit#gid=1991415175") %>%
mutate(licence_plate = "KCX 025N"),
read_sheet("https://docs.google.com/spreadsheets/d/1etKUdclDKurADv58lkNyXAwTsTgv2aJGLKPC4-HE4Q8/edit#gid=990515000") %>%
mutate(licence_plate = "KCX 259D"),
read_sheet("https://docs.google.com/spreadsheets/d/1_OZk-CNTtv5s4KIglNw7-aVzs5KpCsAPem1x1ahdmZE/edit#gid=575564100") %>%
mutate(licence_plate = "KCP 863M")
) %>%
mutate(source = "qr_code")
}
licence_plate <- c("KCL 287P",
"KCN 592S",
"KCX 025N",
"KCX 259D",
"KCP 863M") %>%
as.data.frame() %>%
dplyr::rename("licence_plate" = ".")
feedback_df <- bind_rows(feedback_df, licence_plate)
feedback_df <- merge(feedback_df, matatu_details, by = "licence_plate")
# Clean variables --------------------------------------------------------------
#### Add attribute of original variable name
for(var in names(feedback_df)){
attr(feedback_df[[var]], "name_full") <- var
}
#### Rename
feedback_df <- feedback_df %>%
dplyr::rename("driver_safety_rating" = "How would you rate your Matatu driver?",
"driver_speed" = "How would you describe your Matatu driver's speed?",
"passenger_amount" = "On the Matatu, are there",
"covid19_measures" = "Were measures taken to prevent the spread of COVID-19? (e.g, limiting passengers or providing sanitary wipes?)",
"amenity_importance" = "How important is it for a Matatu to have amenities like Music and WIFI?",
"comments" = "Leave any comments about the matatu or ride. Report unsafe driving or compliment the driver.")
#### Factor variables
feedback_df$driver_safety_rating <- feedback_df$driver_safety_rating %>%
factor(levels = c("Very safe",
"Safe",
"Unsafe",
"Very unsafe")) %>%
fct_rev() # reverse order for plotting later
feedback_df$driver_speed[feedback_df$driver_speed %in% "Too slow (could have gone faster)"] <- "Too slow"
feedback_df$driver_speed <- feedback_df$driver_speed %>%
factor(levels = c("Too slow",
"Okay",
"Fast",
"Dangerously Fast")) %>%
fct_rev() # reverse order for plotting later
feedback_df$passenger_amount <- feedback_df$passenger_amount %>%
factor(levels = c("Less people than seats",
"Same number of people as seats",
"More people than seats",
"More people than can fit")) %>%
fct_rev() # reverse order for plotting later
feedback_df$covid19_measures <- feedback_df$covid19_measures %>%
factor(levels = c("Yes, effective",
"Yes, but seemed limited",
"No")) %>%
fct_rev() # reverse order for plotting later
# Create additional variables --------------------------------------------------
feedback_df$route <- paste0(feedback_df$location_1, " <--> ",
feedback_df$location_2)
feedback_df$route_place_label <- paste0(feedback_df$route, "\n",
feedback_df$licence_plate)
# Export -----------------------------------------------------------------------
saveRDS(feedback_df, "/Users/robmarty/Documents/Github/psv-feedback-dashboard/qr_code_data.Rds")
qr_data <- readRDS("qr_code_data.Rds")
setwd("/Users/robmarty/Documents/Github/psv-feedback-dashboard")
qr_data <- readRDS("qr_code_data.Rds")
qr_data
View(qr_data)
runApp()
qr_data <- readRDS("qr_code_data.Rds")
qr_data$driver_speed
qr_data <- readRDS("qr_code_data.Rds")
qr_data$var <- qr_data$driver_safety_rating
title <- "How would you rate your Matatu driver?"
color_values <- c("firebrick3", "firebrick3", "springgreen4", "springgreen4")
color_values <- c("firebrick3", "firebrick3", "springgreen4", "springgreen4")
limit_max <- 1
strip_text_hjust <- 0.5
qr_data[!is.na(qr_data$var),]
qr_data[!is.na(qr_data$var),]$driver_speed
a <- qr_data[!is.na(qr_data$var),] %>%
# Summarise
group_by(var, route_place_label) %>%
summarise(N = n()) %>%
ungroup()
a$var
qr_data
data_sub <- qr_data[!is.na(qr_data$var),] %>%
# Summarise
group_by(var, route_place_label) %>%
summarise(N = n()) %>%
ungroup() %>%
# Complete
complete(var,
route_place_label,
fill = list(N = 0))
data_sub
data_sub <- qr_data[!is.na(qr_data$var),] %>%
# Summarise
group_by(var, route_place_label) %>%
summarise(N = n()) %>%
ungroup()
head()
head(data_sub)
matatu_details
data_sub <- qr_data[!is.na(qr_data$var),] %>%
# Summarise
group_by(var, route_place_label) %>%
summarise(N = n()) %>%
ungroup()
data_sub
head()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
